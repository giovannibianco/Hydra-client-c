#
#  Copyright (c) Members of the EGEE Collaboration. 2004.
#  See http://eu-egee.org/partners/ for details on the copyright holders.
#  For license conditions see the license file or http://eu-egee.org/license.html
#
#  configure.ac file for the EDS client module
#
#  Authors: Zoltan Farkas <Zoltan.Farkas@cern.ch>
#

AC_PREREQ(2.57)
# The GLITE_MODULE_VERSION macro is generated by the bootstrap script
AC_INIT([GLite Data Hydra CLI], [GLITE_MODULE_VERSION])
AC_CONFIG_AUX_DIR([./project])
AM_INIT_AUTOMAKE([1.6.3 subdir-objects])

# Notices.
AC_COPYRIGHT([Copyright (c) 2004 The EU EGEE Project
See LICENCE file for details
])
AC_REVISION([$Revision: 1.11.2.10.2.5 $])

# Check for the basic compile environment.
AC_PROG_CC
AC_PROG_CPP
AM_PROG_CC_C_O
AC_PROG_LIBTOOL
AC_PROG_LN_S
# Make libtool less verbose
LIBTOOL="$LIBTOOL --silent"

# Turn on warnings
if test "$ac_cv_c_compiler_gnu" = yes; then
	CFLAGS="$CFLAGS -Wall -W -Wmissing-prototypes"
fi

# Check for the basic compile environment.
AC_PROG_INSTALL
AC_PROG_MAKE_SET

WITH_EMI=no
WITH_SL6=no

# AC_ARG_WITH (package, help-string, [action-if-given], [action-if-not-given])
AC_ARG_WITH([emi], AC_HELP_STRING([--with-emi ],[Set up for EMI build]),[WITH_EMI=yes],[WITH_EMI=noo])
AC_ARG_WITH([sl6], AC_HELP_STRING([--with-sl6 ],[Set up for sl6 build]),[WITH_SL6=yes],[WITH_SL6=noo])

# AC_ARG_WITH(emi,
#  [  --with-emi        check for --with-emi ],  [  WITH_EMI=yes ])

if test "$WITH_EMI" = yes; then
       export GSOAP_LOCATION="/usr"
       export GSOAP_VERSION="2.7.13"
fi

if test "$WITH_SL6" = yes; then
       export GSOAP_LOCATION="/usr"
       export GSOAP_VERSION="2.7.16"
fi

# AM_CONDITIONAL (conditional, condition)
AM_CONDITIONAL(USE_GSOAP_2_7_16, [test "x$WITH_SL6" = "xyes"])
AC_SUBST(USE_GSOAP_2_7_16)

AM_CONDITIONAL(USE_GSOAP_2_7_13, [test "x$WITH_EMI" = "xyes"])
AC_SUBST(USE_GSOAP_2_7_13)

# Set GSOAP Properties
AC_GSOAP

AM_CONDITIONAL(USE_GSOAP_2_7_6, [test "x$GSOAP_VERSION_NUM" = "x020706"])
AM_CONDITIONAL(USE_GSOAP_2_7_9, [test "x$GSOAP_VERSION_NUM" = "x020709"])
AM_CONDITIONAL(USE_GSOAP_2_7_10, [test "x$GSOAP_VERSION_NUM" = "x020710"])

# OK. Setup the variable for the document production? JW.

AM_CONDITIONAL(HAVE_DOCBOOK_MAN, [test "x$DUMMY_VARIABLE" = "xxx"])

#
# set CGSI_GSOAP CFLAGS and LDFLAGS:
#
#CGSI_GSOAP_CFLAGS="-I/usr/lib64/include/"
#CGSI_GSOAP_LDFLAGS="-lcgsi_plugin"
#AC_MSG_NOTICE([CGSI_GSOAP_CFLAGS=$CGSI_GSOAP_CFLAGS])
#AC_MSG_NOTICE([CGSI_GSOAP_LDFLAGS=$CGSI_GSOAP_LDFLAGS])
AC_ARG_WITH(cgsi-gsoap-location,
[  --with-cgsi-gsoap-location=PFX     prefix where CGSI GSOAP plugin is installed. (/usr)],
[],
with_cgsi_gsoap_location=${CGSI_GSOAP_LOCATION:-/usr})
     
AC_MSG_RESULT([checking for cgsi-gsoap... ])

if test -n "with_cgsi_gsoap_location" ; then
       CGSI_GSOAP_LOCATION="$with_cgsi_gsoap_location"
       CGSI_GSOAP_CFLAGS="-I$with_cgsi_gsoap_location/include"
       if test "x$host_cpu" = "xx86_64"; then
              ac_cgsi_gsoap_ldlib="-L$with_cgsi_gsoap_location/lib64"
       else
              ac_cgsi_gsoap_ldlib="-L$with_cgsi_gsoap_location/lib"
       fi
       if test -h "/usr/lib64" ; then
              ac_cgsi_gsoap_ldlib="-L$with_cgsi_gsoap_location/lib"
       fi
       if ! test -e "/usr/lib64" ; then
              ac_cgsi_gsoap_ldlib="-L$with_cgsi_gsoap_location/lib"
       fi
       CGSI_GSOAP_LDFLAGS="$ac_cgsi_gsoap_ldlib -lcgsi_plugin"
else
       CGSI_GSOAP_LOCATION=""
       CGSI_GSOAP_CFLAGS=""
       CGSI_GSOAP_LDFLAGS=""
fi
      
AC_MSG_RESULT([CGSI_GSOAP_LOCATION set to $CGSI_GSOAP_LOCATION])
AC_MSG_RESULT([CGSI_GSOAP_CFLAGS set to $CGSI_GSOAP_CFLAGS])
AC_MSG_RESULT([CGSI_GSOAP_LDFLAGS set to $CGSI_GSOAP_LDFLAGS])
    
AC_SUBST(CGSI_GSOAP_LOCATION)
AC_SUBST(CGSI_GSOAP_CFLAGS)
AC_SUBST(CGSI_GSOAP_LDFLAGS)

#
#AC_MSG_NOTICE([pkg-config cgsi_gsoap])
#PKG_CHECK_MODULES(CGSI_GSOAP,
#    [emi-gsoap-plugin],
#    [
#        AC_MSG_NOTICE([CGSI_GSOAP_CFLAGS=$CGSI_GSOAP_CFLAGS])
#        AC_MSG_NOTICE([CGSI_GSOAP_LIBS=$CGSI_GSOAP_LIBS])
#        ac_cppflags_backup=$CPPFLAGS
#        ac_cflags_backup=$CFLAGS
#        ac_ldflags_backup=$LDFLAGS
#        CFLAGS=$CGSI_GSOAP_CFLAGS
#        CPPFLAGS=$CGSI_GSOAP_CFLAGS
#        LDFLAGS=$CGSI_GSOAP_LIBS
#        AC_CHECK_HEADER([cgsi_plugin.h],,[AC_MSG_ERROR(cgsi_gsoap header cgsi_plugin.h not found)])
#        CPPFLAGS=$ac_cppflags_backup
#        CFLAGS=$ac_cflags_backup
#        LDFLAGS=$ac_ldflags_backup
#    ],
#    [
#        AC_MSG_ERROR([cgsi_gsoap libraries not available. Check the PKG_CONFIG_PATH environment variable.])
#    ]
#)


# Arguments.
AC_ARG_ENABLE(
	[debug],
	[  --enable-debug     Produce an executable with debugging symbols],
	[CFLAGS="-g -D_DEBUG $CFLAGS"])

################################################################################
# Check for available functions.

# Check for header files.
AC_CHECK_HEADERS([\
	fcntl.h\
	sys/types.h\
	])

#
# set Globus CFLAGS and LDFLAGS:
#
# CFLAGS=-I/usr/lib64/include/globus -I/usr/include/globus
# LDFLAGS=-lglobus_common -lglobus_gssapi_gsi -lglobus_gssapi_error -lglobus_gss_assist -lglobus_gsi_credential
#
AC_MSG_NOTICE([pkg-config globus-gssapi-gsi])
PKG_CHECK_MODULES(GLOBUS_GSI, 
    [globus-gssapi-gsi],
    [
        AC_MSG_NOTICE([GLOBUS_GSI_CFLAGS=$GLOBUS_GSI_CFLAGS])
        AC_MSG_NOTICE([GLOBUS_GSI_LIBS=$GLOBUS_GSI_LIBS])
        ac_cppflags_backup=$CPPFLAGS
        ac_cflags_backup=$CFLAGS
        ac_ldflags_backup=$LDFLAGS
        CFLAGS=$GLOBUS_GSI_CFLAGS
        CPPFLAGS=$GLOBUS_GSI_CFLAGS
        LDFLAGS=$GLOBUS_GSI_LIBS
        AC_CHECK_HEADER([globus_common.h],,[AC_MSG_ERROR(Globus header globus_common.h not found)])
        CPPFLAGS=$ac_cppflags_backup
        CFLAGS=$ac_cflags_backup
        LDFLAGS=$ac_ldflags_backup
    ], 
    [
        AC_MSG_ERROR([Globus libraries (globus-gssapi-gsi) not available. Check the PKG_CONFIG_PATH environment variable.])
#        AC_MSG_NOTICE([using CFLAGS=$CFLAGS])
#        AC_CHECK_HEADER([globus_common.h],,[AC_MSG_ERROR(Globus header globus_common.h not found)])
    ]
) 

# Set GLite Properties
AC_GLITE
AC_GLITE_VERSION

# Look for xsltproc & manpage stylesheets
# 
# GLITE_DOCBOOK_MAN

# Location of the HTML documentation
AC_ARG_WITH([htmldir],
	AC_HELP_STRING([--with-htmldir],
		[Where to put the HTML documentation @<:@${datadir}/doc/${PACKAGE}/html@:>@]),
	[htmldir=$withval],
	[htmldir='${datadir}/doc/${PACKAGE}/html'])
AC_SUBST([htmldir])

# Magic needed to ensure glib comes from the repository
AC_ARG_WITH([glib2_devel_prefix], AC_HELP_STRING([--with-glib2-devel-prefix], [Path where glib2 is installed]), [PKG_CONFIG_PATH="$withval/lib/pkgconfig"; export PKG_CONFIG_PATH])

# Look for glib
AM_PATH_GLIB_2_0([2.2.3])
if test "$no_glib" = yes; then
    AC_MSG_ERROR([Required dependency glib2 was not found])
fi

# Configuration items
AC_PREFIX_DEFAULT([/opt/glite])
AM_CONFIG_HEADER([src/autogen/config.h])
AC_CONFIG_FILES([Makefile])
AC_CONFIG_FILES([interface/Makefile])
AC_CONFIG_FILES([src/Makefile])
AC_CONFIG_FILES([src/c/Makefile])
AC_CONFIG_FILES([src/utils/Makefile])
AC_CONFIG_FILES([doc/Makefile])
AC_CONFIG_FILES([doc/apidoc/Makefile])
AC_CONFIG_FILES([doc/man/Makefile])

AC_OUTPUT
